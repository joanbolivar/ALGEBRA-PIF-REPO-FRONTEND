^\d{3}$;123;Esta regex busca una cadena que contenga exactamente tres dígitos numéricos.^indica el inicio,\d{3}tres dígitos, y$el final de la cadena.
^[a-zA-Z]+$;HolaMundo;Esta expresión busca una o más (+) letras mayúsculas o minúsculas de la 'a' a la 'z' ([a-zA-Z]) desde el inicio (^) hasta el final ($) de la cadena.
\b[A-Z][a-z]+\b;Manzana;Busca una palabra (\bindica límite de palabra) que comience con una letra mayúscula ([A-Z]) seguida de una o más letras minúsculas ([a-z]+).
\d{2}-\d{2}-\d{4};25-12-2023;Coincide con un formato de fecha DD-MM-YYYY, donde\d{2}son dos dígitos y\d{4}son cuatro dígitos, separados por guiones literales (-).
^\w+$;usuario_123;Busca una cadena que consista en uno o más (+) caracteres de palabra (\w: letras, números o guion bajo) de principio (^) a fin ($).`
^\d+(\.\d{1,2})?$;123.45;Busca un número entero (\d+) opcionalmente seguido por un punto literal (\.) y uno o dos decimales (\d{1,2}). El grupo decimal ((\.\d{1,2})) es opcional (?). Anclado de principio (^) a fin ($).`
.*\.(txt|csv)$;documento.txt;Busca cualquier cadena (.*) que termine ($) con un punto literal (\.) seguido de la extensión 'txt' o 'csv' ((txt|csv)).`
"(.*?)";"Hola Mundo";"Extrae el texto contenido entre comillas dobles literales ("). El grupo (.*?) captura cualquier secuencia de caracteres (excepto nueva línea) de forma no codiciosa (?) entre las comillas.`
^[A-Z0-9]{10}$;AB12CD34EF;Valida un identificador que consiste exactamente en 10 caracteres ({10}), los cuales deben ser letras mayúsculas (A-Z) o dígitos (0-9) ([A-Z0-9]). Anclado de principio (^) a fin ($).`
filename\.([a-zA-Z0-9]+)$;filename.zip;Busca una cadena que comience literalmente con "filename." (filename\.) y capture (()) la extensión del archivo (uno o más caracteres alfanuméricos [a-zA-Z0-9]+) hasta el final de la línea ($).`
(g|gr)[ae]y;gray;Coincide con las variaciones de la palabra 'grey' o 'gray'. (g|gr) permite 'g' o 'gr', seguido de [ae] (que coincide con 'a' o 'e'), y finalmente la letra 'y'. No está anclado.`
^\p{Lu};Árbol;Verifica si la cadena comienza (^) con una letra mayúscula Unicode (\p{Lu}). Solo evalúa el primer carácter de la cadena.`
